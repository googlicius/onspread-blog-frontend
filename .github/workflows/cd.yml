# This is a CD workflow to runs build, zip the artifacts and upload to s3.
name: CD

on:
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  delivery:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-lastest]
        node-version: [14.x]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set up Nodejs specific version
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Receive yarn cached dependencies
        uses: actions/cache@v2.1.3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install dependencies
        run: yarn --prefer-offline

      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download `.serverless` state from S3
        run: aws s3 sync s3://${{ secrets.AWS_SERVERLESS_STATE_BUCKET }}/.serverless .serverless --delete

      - name: Serverless Deploy
        uses: serverless/github-action@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SLS_AWS_BUCKET_NAME: ${{ secrets.SLS_AWS_BUCKET_NAME }}
          SLS_AWS_BUCKET_REGION: ${{ secrets.AWS_REGION }}
          SLS_AWS_DISTRIBUTION_ID: ${{ secrets.SLS_AWS_DISTRIBUTION_ID }}
          NEXT_PUBLIC_GRAPHQL_URL: ${{ secrets.NEXT_PUBLIC_GRAPHQL_URL }}
          NEXT_PUBLIC_API_ENDPOINT: ${{ secrets.NEXT_PUBLIC_API_ENDPOINT }}

      - name: Upload `.serverless` state to S3
        run: aws s3 sync .serverless s3://${{ secrets.AWS_SERVERLESS_STATE_BUCKET }}/.serverless --delete
